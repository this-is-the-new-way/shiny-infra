name: Destroy POC Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
        - dev
        - staging
        - prod
        default: 'dev'
      confirmation:
        description: 'Type "DESTROY" to confirm deletion'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  TERRAFORM_VERSION: 1.11.0

jobs:
  # Job 1: Validation and Confirmation
  validate-destruction:
    name: Validate Destruction Request
    runs-on: ubuntu-latest
    
    outputs:
      proceed: ${{ steps.validate.outputs.proceed }}
      
    steps:
    - name: Validate confirmation
      id: validate
      run: |
        if [ "${{ github.event.inputs.confirmation }}" != "DESTROY" ]; then
          echo "❌ Invalid confirmation. You must type 'DESTROY' to proceed."
          echo "proceed=false" >> $GITHUB_OUTPUT
          exit 1
        else
          echo "✅ Confirmation validated"
          echo "proceed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Display destruction plan
      run: |
        echo "## ⚠️ POC INFRASTRUCTURE DESTRUCTION" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Target Environment: **${{ github.event.inputs.environment }}**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Resources to be destroyed:" >> $GITHUB_STEP_SUMMARY
        echo "- 🏗️ **ECS Cluster and Services**" >> $GITHUB_STEP_SUMMARY
        echo "- ⚖️ **Application Load Balancer**" >> $GITHUB_STEP_SUMMARY
        echo "- 🌐 **VPC and Networking**" >> $GITHUB_STEP_SUMMARY
        echo "- 🔒 **Security Groups**" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 **CloudWatch Log Groups**" >> $GITHUB_STEP_SUMMARY
        echo "- 🔑 **IAM Roles and Policies**" >> $GITHUB_STEP_SUMMARY
        echo "- 🐳 **ECR Repository and Images**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⚠️ WARNING: This is a POC project - destruction is **IRREVERSIBLE**" >> $GITHUB_STEP_SUMMARY

  # Job 2: Scale Down Services
  scale-down:
    name: Scale Down Services
    runs-on: ubuntu-latest
    needs: validate-destruction
    if: needs.validate-destruction.outputs.proceed == 'true'
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Scale down ECS services
      run: |
        echo "🔽 Scaling down ECS services..."
        
        # Scale down ECS service to 0
        aws ecs update-service \
          --cluster "my-app-${{ github.event.inputs.environment }}" \
          --service "my-app-service" \
          --desired-count 0 || true
        
        # Wait for tasks to stop
        echo "⏳ Waiting for tasks to stop..."
        sleep 60

  # Job 3: Clean ECR Repository
  clean-ecr:
    name: Clean ECR Repository
    runs-on: ubuntu-latest
    needs: [validate-destruction, scale-down]
    if: needs.validate-destruction.outputs.proceed == 'true'
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Delete ECR images and repository
      run: |
        REPO_NAME="my-app-${{ github.event.inputs.environment }}"
        
        echo "🗑️ Cleaning ECR repository: $REPO_NAME"
        
        # Delete all images
        aws ecr batch-delete-image \
          --repository-name $REPO_NAME \
          --image-ids "$(aws ecr list-images --repository-name $REPO_NAME --query 'imageIds[*]' --output json)" || true
        
        # Delete repository
        aws ecr delete-repository \
          --repository-name $REPO_NAME \
          --force || true
        
        echo "✅ ECR repository cleaned"

  # Job 4: Destroy Infrastructure
  destroy-infrastructure:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    needs: [validate-destruction, scale-down, clean-ecr]
    if: needs.validate-destruction.outputs.proceed == 'true'
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Initialize Terraform
      run: terraform init
      
    - name: Destroy all infrastructure
      run: |
        echo "🗑️ Destroying POC infrastructure..."
        
        # Destroy application first
        terraform destroy -auto-approve \
          -var-file="${{ github.event.inputs.environment }}_application.tfvars" \
          -target=module.application \
          || echo "⚠️ Application resources may have already been deleted"
        
        # Destroy remaining infrastructure
        terraform destroy -auto-approve \
          -var-file="${{ github.event.inputs.environment }}.tfvars" \
          || echo "⚠️ Infrastructure resources may have already been deleted"
        
        echo "✅ POC infrastructure destroyed"

  # Job 5: Summary
  destruction-summary:
    name: Destruction Summary
    runs-on: ubuntu-latest
    needs: [validate-destruction, scale-down, clean-ecr, destroy-infrastructure]
    if: always()
    
    steps:
    - name: Create destruction summary
      run: |
        echo "## 💥 POC Infrastructure Destruction Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Environment: **${{ github.event.inputs.environment }}**" >> $GITHUB_STEP_SUMMARY
        echo "### Triggered by: **${{ github.actor }}**" >> $GITHUB_STEP_SUMMARY
        echo "### Timestamp: **$(date)**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Destruction Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Validation**: ${{ needs.validate-destruction.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Scale Down**: ${{ needs.scale-down.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **ECR Cleanup**: ${{ needs.clean-ecr.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Infrastructure Destruction**: ${{ needs.destroy-infrastructure.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Overall status
        if [ "${{ needs.destroy-infrastructure.result }}" = "success" ]; then
          echo "### Overall Status: ✅ **POC DESTRUCTION COMPLETED**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **All POC infrastructure resources have been destroyed!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Overall Status: ⚠️ **POC DESTRUCTION INCOMPLETE**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Some resources may still exist. Please check AWS console.**" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔄 Recreation:" >> $GITHUB_STEP_SUMMARY
        echo "To recreate the POC infrastructure, use the main deployment workflow." >> $GITHUB_STEP_SUMMARY